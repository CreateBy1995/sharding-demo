# 数据分片配置 绑定表连表查询测试、广播表测试
spring:
  shardingsphere:
    rules:
      sharding:
        binding-tables: # 绑定表之间的分片规则及真实数据节点需要一致
          - product,product_item
        sharding-algorithms:
          custom-sharding-db:  # 自定义的分库算法
            props:
              algorithm-expression: $->{shardingKey % 2}
            type: ENHANCE-INLINE # 自定义算法
          custom-sharding-table: # 自定义的分表算法
            props:
              algorithm-expression: $->{shardingKey % 2}
            type: ENHANCE-INLINE
        tables:
          product:
            actual-data-nodes: ds$->{0..1}.product_$->{0..1} # 可用节点配置
            database-strategy: # 分库策略
              standard:
                sharding-column: id # 分片键
                sharding-algorithm-name: custom-sharding-db
            table-strategy:
              standard:
                sharding-column: id
                sharding-algorithm-name: custom-sharding-table
          product_item:
            actual-data-nodes: ds$->{0..1}.product_item_$->{0..1}
            database-strategy:
              standard:
                sharding-column: product_id
                sharding-algorithm-name: custom-sharding-db
            table-strategy:
              standard:
                sharding-column: product_id
                sharding-algorithm-name: custom-sharding-table
